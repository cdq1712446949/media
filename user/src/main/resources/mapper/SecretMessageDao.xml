<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdq.dao.SecretMessageDao">

    <resultMap id="messageMap" type="com.cdq.model.SecretMessage">
        <id column="secret_message_id" property="secretMessageId"></id>
        <result column="message_content" property="messageContent"></result>
        <result column="message_create_time" property="messageCreateTime"></result>
        <result column="is_see" property="isSee"></result>
        <association property="fromUser" column="from_user_id" javaType="com.cdq.model.User">
            <id column="user_id" property="userId"></id>
            <result column="nick_name" property="nickName"></result>
            <result column="user_head_photo" property="userHeadPhoto"></result>
        </association>
    </resultMap>

    <resultMap id="messageNumMap" type="com.cdq.util.MessageNumber">
        <id column="from_user_id" property="fromUser.userId"></id>
        <result column="un_mess_num" property="messageNum"></result>
        <association property="fromUser" column="from_user_id" javaType="com.cdq.model.User">
            <id column="user_id" property="userId"></id>
            <result column="nick_name" property="nickName"></result>
            <result column="user_head_photo" property="userHeadPhoto"></result>
        </association>
    </resultMap>

    <select id="querySecretMessage" resultMap="messageNumMap">
         select
         distinct(sm.from_user_id) ,
         count(sm.from_user_id),
         count(sm2.secret_message_id) as un_mess_num,
         u.user_id,
         u.nick_name,
         u.user_head_photo
         from secret_message as sm
         left join user as u on sm.from_user_id = u.user_id
         left join (select * from secret_message where is_see=0 and to_user_id=#{toUser.userId})
          as sm2 on sm.secret_message_id=sm2.secret_message_id
         where  sm.to_user_id=#{toUser.userId}
         group by sm.from_user_id
         order by un_mess_num desc;
    </select>

    <select id="querySMByFromUser" resultMap="messageMap">
         select
         sm.*,
          f.user_id,
         f.user_head_photo,
         f.nick_name
         from secret_message as sm
         left join user as f on sm.from_user_id=f.user_id
         left join user as t on sm.to_user_id=t.user_id
         where  f.user_id=#{fromUser.userId} and t.user_id=#{toUser.userId} and sm.is_see=0
         order by sm.message_create_time desc;
    </select>

    <select id="queryHistoryMessage" resultMap="messageMap">
         select
         sm.*,
         f.user_id,
         f.user_head_photo,
         f.nick_name
         from secret_message as sm
         left join user as f on sm.from_user_id=f.user_id
         left join user as t on sm.to_user_id=t.user_id
         where  ((f.user_id=#{fromUser.userId} and t.user_id=#{toUser.userId})
         or (f.user_id=#{toUser.userId} and t.user_id=#{fromUser.userId}))
         order by sm.message_create_time asc;
    </select>

    <!--插入私信记录-->
    <insert id="insertSecretMessage" parameterType="com.cdq.model.SecretMessage">
        insert into secret_message(
        from_user_id,to_user_id,message_content,message_create_time
        ) values(
        #{fromUser.userId},#{toUser.userId},#{messageContent},#{messageCreateTime}
        )
    </insert>

    <!--修改私信记录状态值-->
    <update id="updateMessageIsSee" parameterType="java.util.List">
        update secret_message set is_see=#{isSee} where secret_message_id in (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>)
    </update>

    <!--修改系统通知记录状态值-->
    <update id="updateSystemIsSee" parameterType="java.util.List">
        update system_message set is_see=#{isSee} where system_message_id in (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>)
    </update>

    <select id="queryAllMessageNum" parameterType="java.lang.String" resultType="java.lang.Integer">
        select sm1Num+sm2Num
        from (select count(secret_message_id) as sm1Num from secret_message where to_user_id =#{userId} and is_see=0) as sm1,
        (select count(system_message_id) as sm2Num from system_message where to_user_id = #{userId} and is_see=0) as sm2;
    </select>

    <select id="queryUserSMStatus" resultType="com.cdq.model.PersonInfo" parameterType="com.cdq.model.User">
        select secret_status from person_info where user_id=#{userId}
    </select>

    <select id="querySystemMessage" parameterType="com.cdq.model.User" resultType="com.cdq.model.SystemMessage">
        select system_message_id,message_content,message_create_time
        from system_message where to_user_id=#{userId} and is_see=0
    </select>

</mapper>